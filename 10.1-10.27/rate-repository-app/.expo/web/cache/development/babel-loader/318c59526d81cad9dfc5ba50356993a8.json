{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ItemSeparator from \"../ItemSeparator\";\nimport RepositoryItem from \"./RepositoryItem\";\nimport { Picker } from '@react-native-picker/picker';\nimport ThemedTextInput from \"../ThemedTextInput\";\nimport { useDebouncedCallback } from 'use-debounce';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar RepositoryListContainer = function RepositoryListContainer(_ref) {\n  var repos = _ref.repos,\n      setOrder = _ref.setOrder,\n      setDirection = _ref.setDirection,\n      setKeyword = _ref.setKeyword,\n      onEndReach = _ref.onEndReach;\n  var debouncedKeyword = useDebouncedCallback(function (val) {\n    return setKeyword(val);\n  }, 500);\n  var Sorting = {\n    NewAsc: 'NewAsc',\n    NewDesc: 'NewDesc',\n    AvgAsc: 'AvgAsc',\n    AvgDesc: 'AvgDesc'\n  };\n  var Order = {\n    CREATED_AT: 'CREATED_AT',\n    RATING_AVERAGE: 'RATING_AVERAGE'\n  };\n  var Direction = {\n    ASC: 'ASC',\n    DESC: 'DESC'\n  };\n  var repoNodes = repos ? repos.repositories.edges.map(function (e) {\n    return e.node;\n  }) : [];\n\n  var handleSortChange = function handleSortChange(val) {\n    switch (val) {\n      case Sorting.NewAsc:\n        setOrder(Order.CREATED_AT);\n        setDirection(Direction.ASC);\n        return;\n\n      case Sorting.NewDesc:\n        setOrder(Order.CREATED_AT);\n        setDirection(Direction.DESC);\n        return;\n\n      case Sorting.AvgAsc:\n        setOrder(Order.RATING_AVERAGE);\n        setDirection(Direction.ASC);\n        return;\n\n      case Sorting.AvgDesc:\n        setOrder(Order.RATING_AVERAGE);\n        setDirection(Direction.DESC);\n        return;\n    }\n  };\n\n  var pickerHeader = _jsxs(_Fragment, {\n    children: [_jsx(ThemedTextInput, {\n      style: {\n        width: 200,\n        margin: 10\n      },\n      placeholder: \"seach keyword\",\n      onChangeText: debouncedKeyword\n    }), _jsxs(Picker, {\n      style: {\n        height: 30,\n        width: 200,\n        margin: 10\n      },\n      onValueChange: handleSortChange,\n      children: [_jsx(Picker.Item, {\n        label: \"Latest repositories\",\n        value: Sorting.NewDesc\n      }), _jsx(Picker.Item, {\n        label: \"Oldest repositories\",\n        value: Sorting.NewAsc\n      }), _jsx(Picker.Item, {\n        label: \"Highest-rated repositories\",\n        value: Sorting.AvgDesc\n      }), _jsx(Picker.Item, {\n        label: \"Lowest-rated repositories\",\n        value: Sorting.AvgAsc\n      })]\n    })]\n  });\n\n  return _jsx(FlatList, {\n    data: repoNodes,\n    renderItem: function renderItem(props) {\n      return _jsx(RepositoryItem, _objectSpread({}, props));\n    },\n    keyExtractor: function keyExtractor(_, idx) {\n      return idx.toString();\n    },\n    ItemSeparatorComponent: ItemSeparator,\n    ListHeaderComponent: pickerHeader,\n    onEndReached: function onEndReached() {\n      return onEndReach;\n    },\n    onEndReachedThreshold: 0.01\n  });\n};\n\nexport default RepositoryListContainer;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/RepositoryList/RespositoryListContainer.jsx"],"names":["React","ItemSeparator","RepositoryItem","Picker","ThemedTextInput","useDebouncedCallback","RepositoryListContainer","repos","setOrder","setDirection","setKeyword","onEndReach","debouncedKeyword","val","Sorting","NewAsc","NewDesc","AvgAsc","AvgDesc","Order","CREATED_AT","RATING_AVERAGE","Direction","ASC","DESC","repoNodes","repositories","edges","map","e","node","handleSortChange","pickerHeader","width","margin","height","props","_","idx","toString"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { FlatList } from 'react-native'\nimport ItemSeparator from '../ItemSeparator';\nimport RepositoryItem from './RepositoryItem';\nimport { Picker } from '@react-native-picker/picker'\nimport ThemedTextInput from '../ThemedTextInput'\nimport { useDebouncedCallback } from 'use-debounce'\n\nconst RepositoryListContainer = ({ \n\trepos, \n\tsetOrder, \n\tsetDirection, \n\tsetKeyword, \n\tonEndReach \n}) => {\n\n\tconst debouncedKeyword = useDebouncedCallback(\n\t\tval => setKeyword(val),\n\t\t500\n\t)\n\n\tconst Sorting = {\n\t\tNewAsc: 'NewAsc',\n\t\tNewDesc: 'NewDesc',\n\t\tAvgAsc: 'AvgAsc',\n\t\tAvgDesc: 'AvgDesc'\n\t}\n\n\tconst Order = {\n\t\tCREATED_AT: 'CREATED_AT',\n\t\tRATING_AVERAGE: 'RATING_AVERAGE'\n\t}\n\n\tconst Direction = {\n\t\tASC: 'ASC',\n\t\tDESC: 'DESC'\n\t}\n\n\tconst repoNodes = repos\n\t\t? repos.repositories.edges.map(e => e.node)\n\t\t: [];\n\n\tconst handleSortChange = val => {\n\t\tswitch(val){\n\t\t\tcase Sorting.NewAsc:\n\t\t\t\tsetOrder(Order.CREATED_AT)\n\t\t\t\tsetDirection(Direction.ASC)\n\t\t\t\treturn\n\t\t\tcase Sorting.NewDesc:\n\t\t\t\tsetOrder(Order.CREATED_AT)\n\t\t\t\tsetDirection(Direction.DESC)\n\t\t\t\treturn\n\t\t\tcase Sorting.AvgAsc:\n\t\t\t\tsetOrder(Order.RATING_AVERAGE)\n\t\t\t\tsetDirection(Direction.ASC)\n\t\t\t\treturn\n\t\t\tcase Sorting.AvgDesc:\n\t\t\t\tsetOrder(Order.RATING_AVERAGE)\n\t\t\t\tsetDirection(Direction.DESC)\n\t\t\t\treturn\n\t\t}\t\n\t}\n\t\n\tconst pickerHeader = (\n\t\t<>\n\t\t<ThemedTextInput \n\t\t\tstyle={{width: 200, margin: 10}}\n\t\t\tplaceholder='seach keyword'\n\t\t\tonChangeText={debouncedKeyword}\n\t\t/>\n\t\t<Picker \n\t\t\tstyle={{height: 30, width: 200, margin: 10}}\t\n\t\t\tonValueChange={handleSortChange}>\n\t\t\t<Picker.Item label='Latest repositories' value={Sorting.NewDesc}/>\n\t\t\t<Picker.Item label='Oldest repositories' value={Sorting.NewAsc}/>\n\t\t\t<Picker.Item label='Highest-rated repositories' value={Sorting.AvgDesc}/>\n\t\t\t<Picker.Item label='Lowest-rated repositories' value={Sorting.AvgAsc}/>\n\t\t</Picker>\n\t\t</>\n\t)\t\n\n\treturn (\n\t\t<FlatList\n\t\t\tdata={repoNodes}\n\t\t\trenderItem={(props) => <RepositoryItem {...props}/>}\n\t\t\tkeyExtractor={(_, idx) => idx.toString()}\n\t\t\tItemSeparatorComponent={ItemSeparator}\n\t\t\tListHeaderComponent={pickerHeader}\n\t\t\tonEndReached={() => onEndReach}\n\t\t\tonEndReachedThreshold={0.01}\n\t\t/>\n\t)\n}\n\nexport default RepositoryListContainer"]},"metadata":{},"sourceType":"module"}