{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"fontSize\", \"fontWeight\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport theme from \"../theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  text: {\n    color: theme.colors.textPrimary,\n    fontSize: theme.fontSizes.body,\n    fontFamily: theme.fonts.main,\n    fontWeight: theme.fontWeights.normal\n  },\n  colorTextSecondary: {\n    color: theme.colors.textSecondary\n  },\n  colorPrimary: {\n    color: theme.colors.primary\n  },\n  fontSizeSubheading: {\n    fontSize: theme.fontSizes.subheading\n  },\n  fontWeightBold: {\n    fontWeight: theme.fontWeights.bold\n  }\n});\n\nvar ThemedText = function ThemedText(_ref) {\n  var color = _ref.color,\n      fontSize = _ref.fontSize,\n      fontWeight = _ref.fontWeight,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var textStyle = [styles.text, color === 'textSecondary' && styles.colorTextSecondary, color === 'primary' && styles.colorPrimary, fontSize === 'subheading' && styles.fontSizeSubheading, fontWeight === 'bold' && styles.fontWeightBold, style];\n  return _jsx(Text, _objectSpread({\n    style: textStyle\n  }, props));\n};\n\nexport default ThemedText;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/ThemedText.jsx"],"names":["theme","styles","StyleSheet","create","text","color","colors","textPrimary","fontSize","fontSizes","body","fontFamily","fonts","main","fontWeight","fontWeights","normal","colorTextSecondary","textSecondary","colorPrimary","primary","fontSizeSubheading","subheading","fontWeightBold","bold","ThemedText","style","props","textStyle"],"mappings":";;;;;;;;;;AACA,OAAOA,KAAP;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAEL,KAAK,CAACM,MAAN,CAAaC,WADf;AAELC,IAAAA,QAAQ,EAAER,KAAK,CAACS,SAAN,CAAgBC,IAFrB;AAGLC,IAAAA,UAAU,EAAEX,KAAK,CAACY,KAAN,CAAYC,IAHnB;AAILC,IAAAA,UAAU,EAAEd,KAAK,CAACe,WAAN,CAAkBC;AAJzB,GAD0B;AAOhCC,EAAAA,kBAAkB,EAAE;AACnBZ,IAAAA,KAAK,EAAEL,KAAK,CAACM,MAAN,CAAaY;AADD,GAPY;AAUhCC,EAAAA,YAAY,EAAE;AACbd,IAAAA,KAAK,EAAEL,KAAK,CAACM,MAAN,CAAac;AADP,GAVkB;AAahCC,EAAAA,kBAAkB,EAAE;AACnBb,IAAAA,QAAQ,EAAER,KAAK,CAACS,SAAN,CAAgBa;AADP,GAbY;AAgBhCC,EAAAA,cAAc,EAAE;AACfT,IAAAA,UAAU,EAAEd,KAAK,CAACe,WAAN,CAAkBS;AADf;AAhBgB,CAAlB,CAAf;;AAqBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAsD;AAAA,MAAnDpB,KAAmD,QAAnDA,KAAmD;AAAA,MAA5CG,QAA4C,QAA5CA,QAA4C;AAAA,MAAlCM,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBY,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AACxE,MAAMC,SAAS,GAAG,CACjB3B,MAAM,CAACG,IADU,EAEjBC,KAAK,KAAK,eAAV,IAA6BJ,MAAM,CAACgB,kBAFnB,EAGjBZ,KAAK,KAAK,SAAV,IAAuBJ,MAAM,CAACkB,YAHb,EAIjBX,QAAQ,KAAK,YAAb,IAA6BP,MAAM,CAACoB,kBAJnB,EAKjBP,UAAU,KAAK,MAAf,IAAyBb,MAAM,CAACsB,cALf,EAMjBG,KANiB,CAAlB;AASA,SAAO,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEE;AAAb,KAA4BD,KAA5B,EAAP;AACA,CAXD;;AAaA,eAAeF,UAAf","sourcesContent":["import { Text, StyleSheet } from 'react-native'\nimport theme from '../theme'\n\nconst styles = StyleSheet.create({\n\ttext: {\n\t\tcolor: theme.colors.textPrimary,\n\t\tfontSize: theme.fontSizes.body,\n\t\tfontFamily: theme.fonts.main,\n\t\tfontWeight: theme.fontWeights.normal\n\t},\n\tcolorTextSecondary: {\n\t\tcolor: theme.colors.textSecondary\n\t},\n\tcolorPrimary: {\n\t\tcolor: theme.colors.primary\n\t},\n\tfontSizeSubheading: {\n\t\tfontSize: theme.fontSizes.subheading\n\t},\n\tfontWeightBold: {\n\t\tfontWeight: theme.fontWeights.bold\n\t}\n})\n\nconst ThemedText = ({ color, fontSize, fontWeight, style, ...props }) => {\n\tconst textStyle = [\n\t\tstyles.text,\n\t\tcolor === 'textSecondary' && styles.colorTextSecondary,\n\t\tcolor === 'primary' && styles.colorPrimary,\n\t\tfontSize === 'subheading' && styles.fontSizeSubheading,\n\t\tfontWeight === 'bold' && styles.fontWeightBold,\n\t\tstyle\n\t];\n\n\treturn <Text style={textStyle} {...props}/>\n}\n\nexport default ThemedText;"]},"metadata":{},"sourceType":"module"}