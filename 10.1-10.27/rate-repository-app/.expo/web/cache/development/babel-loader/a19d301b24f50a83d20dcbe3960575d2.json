{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport PanelTop from \"./PanelTop\";\nimport PanelBottom from \"./PanelBottom\";\nimport theme from \"../../theme\";\nimport ThemedText from \"../ThemedText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar style = StyleSheet.create({\n  panel: {\n    padding: 10\n  }\n});\n\nvar RepositoryItem = function RepositoryItem(_ref) {\n  var item = _ref.item,\n      _ref$singleView = _ref.singleView,\n      singleView = _ref$singleView === void 0 ? true : _ref$singleView;\n  return _jsxs(View, {\n    testID: \"repositoryItem\",\n    style: style.panel,\n    children: [_jsx(PanelTop, {\n      imageUrl: item.ownerAvatarUrl,\n      title: item.fullName,\n      description: item.description,\n      language: item.language\n    }), _jsx(PanelBottom, {\n      stars: item.stargazersCount,\n      forks: item.forksCount,\n      reviews: item.reviewCount,\n      rating: item.ratingAverage\n    }), singleView ? _jsx(Pressable, {\n      style: _objectSpread(_objectSpread({}, theme.nub), {}, {\n        width: 100\n      }),\n      children: _jsx(ThemedText, {\n        style: {\n          color: 'white'\n        },\n        children: \"Open in GitHub\"\n      })\n    }) : null]\n  });\n};\n\nexport default RepositoryItem;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/RepositoryList/RepositoryItem.jsx"],"names":["PanelTop","PanelBottom","theme","ThemedText","style","StyleSheet","create","panel","padding","RepositoryItem","item","singleView","ownerAvatarUrl","fullName","description","language","stargazersCount","forksCount","reviewCount","ratingAverage","nub","width","color"],"mappings":";;;;;;;;;AACA,OAAOA,QAAP;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP;AACA,OAAOC,UAAP;;;AAEA,IAAMC,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,KAAK,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AADwB,CAAlB,CAAd;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,6BAASC,UAAT;AAAA,MAASA,UAAT,gCAAsB,IAAtB;AAAA,SACtB,MAAC,IAAD;AAAM,IAAA,MAAM,EAAC,gBAAb;AAA8B,IAAA,KAAK,EAAEP,KAAK,CAACG,KAA3C;AAAA,eACC,KAAC,QAAD;AACC,MAAA,QAAQ,EAAEG,IAAI,CAACE,cADhB;AAEC,MAAA,KAAK,EAAEF,IAAI,CAACG,QAFb;AAGC,MAAA,WAAW,EAAEH,IAAI,CAACI,WAHnB;AAIC,MAAA,QAAQ,EAAEJ,IAAI,CAACK;AAJhB,MADD,EAOC,KAAC,WAAD;AACC,MAAA,KAAK,EAAEL,IAAI,CAACM,eADb;AAEC,MAAA,KAAK,EAAEN,IAAI,CAACO,UAFb;AAGC,MAAA,OAAO,EAAEP,IAAI,CAACQ,WAHf;AAIC,MAAA,MAAM,EAAER,IAAI,CAACS;AAJd,MAPD,EAaER,UAAU,GAEV,KAAC,SAAD;AAAW,MAAA,KAAK,kCAAMT,KAAK,CAACkB,GAAZ;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,QAAhB;AAAA,gBACC,KAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAnB;AAAA;AAAA;AADD,MAFU,GAQT,IArBH;AAAA,IADsB;AAAA,CAAvB;;AA0BA,eAAeb,cAAf","sourcesContent":["import { View, StyleSheet, Pressable } from 'react-native'\nimport PanelTop from './PanelTop'\nimport PanelBottom from './PanelBottom'\nimport theme from '../../theme'\nimport ThemedText from '../ThemedText'\n\nconst style = StyleSheet.create({\n\tpanel: {\n\t\tpadding: 10,\n\t},\n})\n\nconst RepositoryItem = ({ item, singleView = true }) => (\n\t<View testID='repositoryItem' style={style.panel}>\n\t\t<PanelTop\n\t\t\timageUrl={item.ownerAvatarUrl}\n\t\t\ttitle={item.fullName}\n\t\t\tdescription={item.description}\n\t\t\tlanguage={item.language}\n\t\t/>\n\t\t<PanelBottom\n\t\t\tstars={item.stargazersCount}\n\t\t\tforks={item.forksCount}\n\t\t\treviews={item.reviewCount}\n\t\t\trating={item.ratingAverage}\n\t\t/>\n\t\t{singleView \n\t\t? (\n\t\t\t<Pressable style={{...theme.nub, width: 100}}>\n\t\t\t\t<ThemedText style={{color: 'white'}}>\n\t\t\t\t\t\tOpen in GitHub\n\t\t\t\t</ThemedText>\n\t\t\t</Pressable>\n\t\t)\n\t\t: null}\n\t</View>\n)\n\nexport default RepositoryItem"]},"metadata":{},"sourceType":"module"}