{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport CreateReviewForm from \"./CreateReviewForm\";\nimport { useMutation } from '@apollo/client';\nimport { CREATE_REVIEW } from \"../../graphql/mutations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CreateReview = function CreateReview() {\n  var _useMutation = useMutation(CREATE_REVIEW),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createReview = _useMutation2[0],\n      result = _useMutation2[1];\n\n  var handleSubmitReview = function handleSubmitReview(_ref) {\n    var repositoryName = _ref.repositoryName,\n        respositoryOwner = _ref.respositoryOwner,\n        rating = _ref.rating,\n        review = _ref.review;\n  };\n\n  return _jsx(CreateReviewForm, {\n    onSubmit: function onSubmit() {\n      return console.log('form submitted');\n    }\n  });\n};\n\nexport default CreateReview;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/CreateReview/index.jsx"],"names":["CreateReviewForm","useMutation","CREATE_REVIEW","CreateReview","createReview","result","handleSubmitReview","repositoryName","respositoryOwner","rating","review","console","log"],"mappings":";AAAA,OAAOA,gBAAP;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAE1B,qBAAiCF,WAAW,CAACC,aAAD,CAA5C;AAAA;AAAA,MAAQE,YAAR;AAAA,MAAsBC,MAAtB;;AAEA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAA0D;AAAA,QAAvDC,cAAuD,QAAvDA,cAAuD;AAAA,QAAvCC,gBAAuC,QAAvCA,gBAAuC;AAAA,QAArBC,MAAqB,QAArBA,MAAqB;AAAA,QAAbC,MAAa,QAAbA,MAAa;AAEpF,GAFD;;AAGA,SAAO,KAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAE;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA;AAA5B,IAAP;AACA,CARD;;AAUA,eAAeT,YAAf","sourcesContent":["import CreateReviewForm from './CreateReviewForm'\nimport { useMutation } from '@apollo/client'\nimport { CREATE_REVIEW } from '../../graphql/mutations'\n\nconst CreateReview = () => {\n\n\tconst [ createReview, result ] = useMutation(CREATE_REVIEW)\n\n\tconst handleSubmitReview = ({ repositoryName, respositoryOwner, rating, review }) => {\n\n\t}\n\treturn <CreateReviewForm onSubmit={() => console.log('form submitted')}/>\n}\n\nexport default CreateReview"]},"metadata":{},"sourceType":"module"}