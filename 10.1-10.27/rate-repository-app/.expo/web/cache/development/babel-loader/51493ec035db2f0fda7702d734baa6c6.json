{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport CreateReviewForm from \"./CreateReviewForm\";\nimport { useMutation } from '@apollo/client';\nimport { CREATE_REVIEW } from \"../../graphql/mutations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CreateReview = function CreateReview() {\n  var _useMutation = useMutation(CREATE_REVIEW),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createReview = _useMutation2[0],\n      result = _useMutation2[1];\n\n  var handleSubmitReview = function handleSubmitReview(_ref) {\n    var repositoryName, respositoryOwner, rating, review, _createReview, repository;\n\n    return _regeneratorRuntime.async(function handleSubmitReview$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            repositoryName = _ref.repositoryName, respositoryOwner = _ref.respositoryOwner, rating = _ref.rating, review = _ref.review;\n            _createReview = createReview({\n              variables: {\n                review: {\n                  respositoryName: respositoryName,\n                  ownerName: respositoryOwner,\n                  rating: parseInt(rating),\n                  review: review\n                }\n              }\n            }), repository = _createReview.repository;\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(CreateReviewForm, {\n    onSubmit: function onSubmit() {\n      return console.log('form submitted');\n    }\n  });\n};\n\nexport default CreateReview;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/CreateReview/index.jsx"],"names":["CreateReviewForm","useMutation","CREATE_REVIEW","CreateReview","createReview","result","handleSubmitReview","repositoryName","respositoryOwner","rating","review","variables","respositoryName","ownerName","parseInt","repository","console","log"],"mappings":";;AAAA,OAAOA,gBAAP;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAE1B,qBAAiCF,WAAW,CAACC,aAAD,CAA5C;AAAA;AAAA,MAAQE,YAAR;AAAA,MAAsBC,MAAtB;;AAEA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,cAAT,QAASA,cAAT,EAAyBC,gBAAzB,QAAyBA,gBAAzB,EAA2CC,MAA3C,QAA2CA,MAA3C,EAAmDC,MAAnD,QAAmDA,MAAnD;AAAA,4BACHN,YAAY,CAAC;AACnCO,cAAAA,SAAS,EAAE;AACVD,gBAAAA,MAAM,EAAE;AACPE,kBAAAA,eAAe,EAAEA,eADV;AAEPC,kBAAAA,SAAS,EAAEL,gBAFJ;AAGPC,kBAAAA,MAAM,EAAEK,QAAQ,CAACL,MAAD,CAHT;AAIPC,kBAAAA,MAAM,EAAEA;AAJD;AADE;AADwB,aAAD,CADT,EAClBK,UADkB,iBAClBA,UADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAYA,SAAO,KAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAE;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA;AAA5B,IAAP;AACA,CAjBD;;AAmBA,eAAed,YAAf","sourcesContent":["import CreateReviewForm from './CreateReviewForm'\nimport { useMutation } from '@apollo/client'\nimport { CREATE_REVIEW } from '../../graphql/mutations'\n\nconst CreateReview = () => {\n\n\tconst [ createReview, result ] = useMutation(CREATE_REVIEW)\n\n\tconst handleSubmitReview = async ({ repositoryName, respositoryOwner, rating, review }) => {\n\t\tconst { repository } = createReview({ \n\t\t\tvariables: {\n\t\t\t\treview: {\n\t\t\t\t\trespositoryName: respositoryName,\n\t\t\t\t\townerName: respositoryOwner,\n\t\t\t\t\trating: parseInt(rating),\n\t\t\t\t\treview: review\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\treturn <CreateReviewForm onSubmit={() => console.log('form submitted')}/>\n}\n\nexport default CreateReview"]},"metadata":{},"sourceType":"module"}