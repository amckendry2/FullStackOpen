{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useApolloClient, useMutation } from '@apollo/client';\nimport { AUTHENTICATE } from \"../graphql/mutations\";\nimport useAuthStorage from \"./useAuthStorage\";\n\nvar useSignIn = function useSignIn() {\n  var authStorage = useAuthStorage();\n\n  var _useMutation = useMutation(AUTHENTICATE),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      mutate = _useMutation2[0],\n      result = _useMutation2[1];\n\n  var apolloClient = useApolloClient();\n\n  var signIn = function signIn(data) {\n    var _await$mutate, _data;\n\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(mutate({\n              variables: {\n                credentials: _data\n              }\n            }));\n\n          case 3:\n            _await$mutate = _context.sent;\n            _data = _await$mutate.data;\n            authStorage.setAccessToken(_data.authenticate.accessToken);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return [signIn, result];\n};\n\nexport default useSignIn;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/hooks/useSignIn.js"],"names":["useApolloClient","useMutation","AUTHENTICATE","useAuthStorage","useSignIn","authStorage","mutate","result","apolloClient","signIn","data","variables","credentials","setAccessToken","authenticate","accessToken","console","log"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,gBAA7C;AACA,SAASC,YAAT;AACA,OAAOC,cAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAEvB,MAAMC,WAAW,GAAGF,cAAc,EAAlC;;AACA,qBAAwBF,WAAW,CAACC,YAAD,CAAnC;AAAA;AAAA,MAAMI,MAAN;AAAA,MAAcC,MAAd;;AACA,MAAMC,YAAY,GAAGR,eAAe,EAApC;;AAEA,MAAMS,MAAM,GAAG,SAATA,MAAS,CAAMC,IAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEUJ,MAAM,CAAC;AAC7BK,cAAAA,SAAS,EAAE;AACVC,gBAAAA,WAAW,EAAEF;AADH;AADkB,aAAD,CAFhB;;AAAA;AAAA;AAELA,YAAAA,KAFK,iBAELA,IAFK;AAObL,YAAAA,WAAW,CAACQ,cAAZ,CAA2BH,KAAI,CAACI,YAAL,CAAkBC,WAA7C;AAPa;AAAA;;AAAA;AAAA;AAAA;AAUbC,YAAAA,OAAO,CAACC,GAAR;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAaA,SAAO,CAACR,MAAD,EAASF,MAAT,CAAP;AACA,CApBD;;AAsBA,eAAeH,SAAf","sourcesContent":["import { useApolloClient, useMutation } from '@apollo/client'\nimport { AUTHENTICATE } from '../graphql/mutations'\nimport useAuthStorage from './useAuthStorage'\n\nconst useSignIn = () => {\n\n\tconst authStorage = useAuthStorage()\n\tconst[mutate, result] = useMutation(AUTHENTICATE)\n\tconst apolloClient = useApolloClient()\n\n\tconst signIn = async data => {\n\t\ttry {\n\t\t\tconst { data } = await mutate({\n\t\t\t\tvariables: {\n\t\t\t\t\tcredentials: data\n\t\t\t\t}\n\t\t\t})\n\t\t\tauthStorage.setAccessToken(data.authenticate.accessToken)\n\t\t\t\n\t\t} catch(err) {\n\t\t\tconsole.log(err)\n\t\t}\n\t}\n\treturn [signIn, result];\n}\n\nexport default useSignIn"]},"metadata":{},"sourceType":"module"}