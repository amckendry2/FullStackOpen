{"ast":null,"code":"import { useQuery } from '@apollo/client';\nimport { GET_REPOSITORIES } from \"../graphql/queries\";\n\nvar useRepositories = function useRepositories(orderBy, orderDirection, keyword) {\n  var _useQuery = useQuery(GET_REPOSITORIES, {\n    fetchPolicy: 'cache-and-network',\n    variables: {\n      orderBy: orderBy,\n      orderDirection: orderDirection,\n      searchKeyword: keyword\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore,\n      loading = _useQuery.loading;\n\n  var handleFetchMore = function handleFetchMore() {\n    var canFetchMore = !loading && (data == null ? void 0 : data.repositories.pageInfo.hasNextPage);\n\n    if (!canFetchMore) {\n      return;\n    }\n\n    fetchMore({\n      variables: {\n        after: data.repositories.pageInfo.endCursor,\n        orderBy: orderBy,\n        orderDirection: orderDirection,\n        searchKeyword: keyword\n      }\n    });\n  };\n\n  return {\n    repositories: data,\n    loading: loading,\n    error: error\n  };\n};\n\nexport default useRepositories;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/hooks/useRepositories.js"],"names":["useQuery","GET_REPOSITORIES","useRepositories","orderBy","orderDirection","keyword","fetchPolicy","variables","searchKeyword","data","error","fetchMore","loading","handleFetchMore","canFetchMore","repositories","pageInfo","hasNextPage","after","endCursor"],"mappings":"AACA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD,EAAUC,cAAV,EAA0BC,OAA1B,EAAsC;AAC7D,kBAA4CL,QAAQ,CAACC,gBAAD,EAAmB;AACtEK,IAAAA,WAAW,EAAE,mBADyD;AAEtEC,IAAAA,SAAS,EAAC;AACTJ,MAAAA,OAAO,EAAEA,OADA;AAETC,MAAAA,cAAc,EAAEA,cAFP;AAGTI,MAAAA,aAAa,EAAEH;AAHN;AAF4D,GAAnB,CAApD;AAAA,MAAQI,IAAR,aAAQA,IAAR;AAAA,MAAcC,KAAd,aAAcA,KAAd;AAAA,MAAqBC,SAArB,aAAqBA,SAArB;AAAA,MAAgCC,OAAhC,aAAgCA,OAAhC;;AASA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC7B,QAAMC,YAAY,GAAG,CAACF,OAAD,KAAYH,IAAZ,oBAAYA,IAAI,CAAEM,YAAN,CAAmBC,QAAnB,CAA4BC,WAAxC,CAArB;;AACA,QAAI,CAACH,YAAL,EAAmB;AAClB;AACA;;AACDH,IAAAA,SAAS,CAAC;AACTJ,MAAAA,SAAS,EAAE;AACVW,QAAAA,KAAK,EAAET,IAAI,CAACM,YAAL,CAAkBC,QAAlB,CAA2BG,SADxB;AAEVhB,QAAAA,OAAO,EAAPA,OAFU;AAGVC,QAAAA,cAAc,EAAdA,cAHU;AAIVI,QAAAA,aAAa,EAAEH;AAJL;AADF,KAAD,CAAT;AAQA,GAbD;;AAgBA,SAAO;AAAEU,IAAAA,YAAY,EAAEN,IAAhB;AAAsBG,IAAAA,OAAO,EAAPA,OAAtB;AAA+BF,IAAAA,KAAK,EAALA;AAA/B,GAAP;AAGA,CA7BD;;AA+BA,eAAeR,eAAf","sourcesContent":["// import { useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { GET_REPOSITORIES } from '../graphql/queries'\n\nconst useRepositories = (orderBy, orderDirection, keyword) => {\n\tconst { data, error, fetchMore, loading } = useQuery(GET_REPOSITORIES, {\n\t\tfetchPolicy: 'cache-and-network',\n\t\tvariables:{\n\t\t\torderBy: orderBy,\n\t\t\torderDirection: orderDirection,\n\t\t\tsearchKeyword: keyword\n\t\t}\n\t})\n\n\tconst handleFetchMore = () => {\n\t\tconst canFetchMore = !loading && data?.repositories.pageInfo.hasNextPage\n\t\tif (!canFetchMore) {\n\t\t\treturn\n\t\t}\n\t\tfetchMore({\n\t\t\tvariables: {\n\t\t\t\tafter: data.repositories.pageInfo.endCursor,\n\t\t\t\torderBy,\n\t\t\t\torderDirection,\n\t\t\t\tsearchKeyword: keyword\n\t\t\t}\n\t\t})\n\t}\n\n\n\treturn { repositories: data, loading, error }\n\n\n}\n\nexport default useRepositories"]},"metadata":{},"sourceType":"module"}