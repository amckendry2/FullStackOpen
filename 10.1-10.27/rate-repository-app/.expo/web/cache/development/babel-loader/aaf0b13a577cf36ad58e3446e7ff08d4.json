{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as yup from 'yup';\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik } from 'formik';\nimport FormikTextInput from \"./FormikTextInput\";\nimport ThemedText from \"../ThemedText\";\nimport theme from \"../../theme\";\nimport useSignIn from \"../../hooks/useSignIn\";\nimport { useNavigate } from 'react-router-native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar style = StyleSheet.create({\n  button: {\n    backgroundColor: theme.colors.primary,\n    marginTop: 10,\n    borderRadius: 3,\n    padding: 5\n  },\n  buttonText: {\n    alignSelf: 'center',\n    color: 'white'\n  },\n  form: {\n    border: '1px solid black',\n    padding: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    width: 300\n  }\n});\nvar initialValues = {\n  username: '',\n  password: ''\n};\nvar validationSchema = yup.object().shape({\n  username: yup.string().min(4, 'Must be at least 4 characters').max(12, 'Must be 12 characters or less').required('Username is required'),\n  password: yup.string().min(6, 'Must be at least 6 characters').max(12, 'Must be 12 characters or less').required('Password is required')\n});\n\nvar SignInForm = function SignInForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return _jsxs(View, {\n    style: style.form,\n    children: [_jsx(FormikTextInput, {\n      name: \"username\",\n      placeholder: \"username\"\n    }), _jsx(FormikTextInput, {\n      name: \"password\",\n      placeholder: \"password\"\n    }), _jsx(Pressable, {\n      onPress: onSubmit,\n      style: style.button,\n      children: _jsx(ThemedText, {\n        style: style.buttonText,\n        children: \"Sign in\"\n      })\n    })]\n  });\n};\n\nvar SignIn = function SignIn() {\n  var _useSignIn = useSignIn(),\n      _useSignIn2 = _slicedToArray(_useSignIn, 1),\n      signIn = _useSignIn2[0];\n\n  var navigate = useNavigate();\n\n  var onSubmit = function onSubmit(params) {\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            signIn(params);\n            navigate('/', {\n              replace: true\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema,\n    children: function children(_ref2) {\n      var handleSubmit = _ref2.handleSubmit;\n      return _jsx(SignInForm, {\n        onSubmit: handleSubmit\n      });\n    }\n  });\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/SignIn/index.jsx"],"names":["yup","Formik","FormikTextInput","ThemedText","theme","useSignIn","useNavigate","style","StyleSheet","create","button","backgroundColor","colors","primary","marginTop","borderRadius","padding","buttonText","alignSelf","color","form","border","display","flexDirection","width","initialValues","username","password","validationSchema","object","shape","string","min","max","required","SignInForm","onSubmit","SignIn","signIn","navigate","params","replace","handleSubmit"],"mappings":"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","sourcesContent":["import * as yup from 'yup'\nimport { View, Pressable, StyleSheet } from 'react-native'\nimport { Formik } from 'formik'\nimport FormikTextInput from './FormikTextInput'\nimport ThemedText from '../ThemedText'\nimport theme from '../../theme'\nimport useSignIn from '../../hooks/useSignIn'\nimport { useNavigate } from 'react-router-native'\n\nconst style = StyleSheet.create({\n\tbutton: {\n\t\tbackgroundColor: theme.colors.primary,\n\t\tmarginTop: 10,\n\t\tborderRadius: 3,\n\t\tpadding: 5\n\t},\n\tbuttonText: {\n\t\talignSelf: 'center',\n\t\tcolor: 'white'\n\t},\n\tform:{\n\t\tborder: '1px solid black',\n\t\tpadding: 10,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\twidth: 300\n\t}\n})\n\nconst initialValues = {\n\tusername: '',\n\tpassword: ''\n}\n\nconst validationSchema = yup.object().shape({\n\tusername: yup\n\t\t.string()\n\t\t.min(4, 'Must be at least 4 characters')\n\t\t.max(12, 'Must be 12 characters or less')\n\t\t.required('Username is required'),\n\tpassword: yup\n\t\t.string()\n\t\t.min(6, 'Must be at least 6 characters')\n\t\t.max(12, 'Must be 12 characters or less')\n\t\t.required('Password is required'),\n})\n\n\nconst SignInForm = ({ onSubmit }) => (\n\t<View style={style.form}>\n\t\t<FormikTextInput name='username' placeholder='username' />\n\t\t<FormikTextInput name='password' placeholder='password' />\n\t\t<Pressable onPress={onSubmit} style={style.button}>\n\t\t\t<ThemedText style={style.buttonText}>Sign in</ThemedText>\n\t\t</Pressable>\n\t</View>\n)\n\nconst SignIn = () => {\n\n\tconst [signIn] = useSignIn()\n\tconst navigate = useNavigate()\n\n\tconst onSubmit = async params => {\n\t\tsignIn(params)\n\t\tnavigate('/', {replace: true})\n\t}\n\n\treturn (\n\t\t<Formik \n\t\t\tinitialValues={initialValues} \n\t\t\tonSubmit={onSubmit}\n\t\t\tvalidationSchema={validationSchema}\n\t\t>\n\t\t\t{({ handleSubmit }) => <SignInForm onSubmit={handleSubmit}/>}\n\t\t</Formik>\n\t)\n}\n\nexport default SignIn"]},"metadata":{},"sourceType":"module"}