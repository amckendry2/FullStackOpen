{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useMutation } from '@apollo/client';\nimport { AUTHENTICATE } from \"../graphql/mutations\";\nimport useAuthStorage from \"./useAuthStorage\";\n\nvar useSignIn = function useSignIn() {\n  var authStorage = useAuthStorage();\n\n  var _useMutation = useMutation(AUTHENTICATE),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      mutate = _useMutation2[0],\n      result = _useMutation2[1];\n\n  var signIn = function signIn(data) {\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(mutate({\n              variables: {\n                credentials: data\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return [signIn, result];\n};\n\nexport default useSignIn;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/hooks/useSignIn.js"],"names":["useMutation","AUTHENTICATE","useAuthStorage","useSignIn","authStorage","mutate","result","signIn","data","variables","credentials"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT;AACA,OAAOC,cAAP;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACvB,MAAMC,WAAW,GAAGF,cAAc,EAAlC;;AACA,qBAAwBF,WAAW,CAACC,YAAD,CAAnC;AAAA;AAAA,MAAMI,MAAN;AAAA,MAAcC,MAAd;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACRH,MAAM,CAAC;AACZI,cAAAA,SAAS,EAAE;AACVC,gBAAAA,WAAW,EAAEF;AADH;AADC,aAAD,CADE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAQA,SAAO,CAACD,MAAD,EAASD,MAAT,CAAP;AACA,CAZD;;AAcA,eAAeH,SAAf","sourcesContent":["import { useMutation } from '@apollo/client'\nimport { AUTHENTICATE } from '../graphql/mutations'\nimport useAuthStorage from './useAuthStorage'\nconst useSignIn = () => {\n\tconst authStorage = useAuthStorage()\n\tconst[mutate, result] = useMutation(AUTHENTICATE)\n\tconst signIn = async data => {\n\t\tawait mutate({\n\t\t\tvariables: { \n\t\t\t\tcredentials: data\n\t\t\t}\n\t\t})\n\n\t}\n\treturn [signIn, result];\n}\n\nexport default useSignIn"]},"metadata":{},"sourceType":"module"}