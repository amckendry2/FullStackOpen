{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AppBarTab from \"./AppBarTab\";\nimport SignOutTab from \"./SignOutTab\";\nimport theme from \"../../theme\";\nimport { useQuery } from '@apollo/client';\nimport { GET_ME } from \"../../graphql/queries\";\nimport useSignIn from \"../../hooks/useSignIn\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: theme.spacing.navBar,\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: theme.colors.navBar,\n    marginBottom: 5\n  }\n});\n\nvar AppBar = function AppBar() {\n  var _useSignIn = useSignIn(),\n      _useSignIn2 = _slicedToArray(_useSignIn, 2),\n      signOut = _useSignIn2[1];\n\n  var me = useQuery(GET_ME);\n\n  if (me.data) {\n    console.log(me.data.me);\n  }\n\n  var signInOrOut = me.data && me.data.me ? _jsx(SignOutTab, {\n    text: 'SIGN OUT',\n    pressHandler: signOut\n  }) : _jsxs(_Fragment, {\n    children: [_jsx(AppBarTab, {\n      to: \"/signin\",\n      text: 'SIGN IN'\n    }), _jsx(AppBarTab, {\n      to: \"/signup\",\n      text: \"SIGN UP\"\n    })]\n  });\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      horizontal: true,\n      children: [_jsx(AppBarTab, {\n        to: \"/\",\n        text: \"REPOSITORIES\"\n      }), _jsx(AppBarTab, {\n        to: \"/createReview\",\n        text: \"CREATE REVIEW\"\n      }), signInOrOut]\n    })\n  });\n};\n\nexport default AppBar;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/AppBar/index.jsx"],"names":["AppBarTab","SignOutTab","theme","useQuery","GET_ME","useSignIn","styles","StyleSheet","create","container","paddingTop","spacing","navBar","display","flexDirection","backgroundColor","colors","marginBottom","AppBar","signOut","me","data","console","log","signInOrOut"],"mappings":";;;;AACA,OAAOA,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,MAAT;AACA,OAAOC,SAAP;;;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,UAAU,EAAER,KAAK,CAACS,OAAN,CAAcC,MADhB;AAEVC,IAAAA,OAAO,EAAE,MAFC;AAGVC,IAAAA,aAAa,EAAE,KAHL;AAIVC,IAAAA,eAAe,EAAEb,KAAK,CAACc,MAAN,CAAaJ,MAJpB;AAKVK,IAAAA,YAAY,EAAE;AALJ;AADqB,CAAlB,CAAf;;AAUA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAEpB,mBAAmBb,SAAS,EAA5B;AAAA;AAAA,MAAQc,OAAR;;AACA,MAAMC,EAAE,GAAGjB,QAAQ,CAACC,MAAD,CAAnB;;AAEA,MAAGgB,EAAE,CAACC,IAAN,EAAW;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAE,CAACC,IAAH,CAAQD,EAApB;AACA;;AAED,MAAMI,WAAW,GAAGJ,EAAE,CAACC,IAAH,IAAWD,EAAE,CAACC,IAAH,CAAQD,EAAnB,GAEnB,KAAC,UAAD;AACC,IAAA,IAAI,EAAE,UADP;AAEC,IAAA,YAAY,EAAED;AAFf,IAFmB,GAOnB;AAAA,eACC,KAAC,SAAD;AAAW,MAAA,EAAE,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAE;AAA9B,MADD,EAEC,KAAC,SAAD;AAAW,MAAA,EAAE,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC;AAA7B,MAFD;AAAA,IAPD;AAYA,SACC,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACG,SAApB;AAAA,cACC,MAAC,UAAD;AAAY,MAAA,UAAU,MAAtB;AAAA,iBACC,KAAC,SAAD;AAAW,QAAA,EAAE,EAAC,GAAd;AAAkB,QAAA,IAAI,EAAC;AAAvB,QADD,EAEC,KAAC,SAAD;AAAW,QAAA,EAAE,EAAC,eAAd;AAA8B,QAAA,IAAI,EAAC;AAAnC,QAFD,EAGEe,WAHF;AAAA;AADD,IADD;AASA,CA9BD;;AAgCA,eAAeN,MAAf","sourcesContent":["import { View, StyleSheet, ScrollView } from 'react-native' \nimport AppBarTab from './AppBarTab'\nimport SignOutTab from './SignOutTab'\nimport theme from '../../theme'\nimport { useQuery } from '@apollo/client'\nimport { GET_ME } from '../../graphql/queries'\nimport useSignIn from '../../hooks/useSignIn'\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpaddingTop: theme.spacing.navBar,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tbackgroundColor: theme.colors.navBar,\n\t\tmarginBottom: 5 \n\t}\n})\n\nconst AppBar = () => {\n\n\tconst[, signOut] = useSignIn()\n\tconst me = useQuery(GET_ME)\t\n\n\tif(me.data){\n\t\tconsole.log(me.data.me)\n\t}\n\n\tconst signInOrOut = me.data && me.data.me\n\t\t? \n\t\t<SignOutTab\n\t\t\ttext={'SIGN OUT'}\n\t\t\tpressHandler={signOut}\n\t\t/>\n\t\t: \n\t\t<>\n\t\t\t<AppBarTab to='/signin' text={'SIGN IN'}/>\n\t\t\t<AppBarTab to='/signup' text='SIGN UP'/>\n\t\t</>\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<ScrollView horizontal>\n\t\t\t\t<AppBarTab to='/' text='REPOSITORIES' />\n\t\t\t\t<AppBarTab to='/createReview' text='CREATE REVIEW'/>\n\t\t\t\t{signInOrOut}\n\t\t\t</ScrollView>\n\t\t</View>\n\t)\n}\n\nexport default AppBar"]},"metadata":{},"sourceType":"module"}