{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RepositoryItem from \"./RepositoryItem\";\nimport theme from \"../theme\";\nimport { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  separator: {\n    height: theme.spacing.separator,\n    backgroundColor: theme.colors.separator\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return _jsx(View, {\n    style: styles.separator\n  });\n};\n\nvar RepositoryList = function RepositoryList() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      repositories = _useState2[0],\n      setRepositories = _useState2[1];\n\n  var fetchRepositories = function fetchRepositories() {\n    var res, json;\n    return _regeneratorRuntime.async(function fetchRepositories$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://10.84.1.128:5000/api/repositories'));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            json = _context.sent;\n            console.log(json);\n            setRepositories(json);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchRepositories();\n  }, []);\n  var repoNodes = respositories ? respositories.edges.map(function (e) {\n    return e.node;\n  }) : [];\n  return _jsx(FlatList, {\n    data: repoNodes,\n    renderItem: RepositoryItem,\n    ItemSeparatorComponent: ItemSeparator\n  });\n};\n\nexport default RepositoryList;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/RepositoryList.jsx"],"names":["RepositoryItem","theme","useEffect","useState","styles","StyleSheet","create","separator","height","spacing","backgroundColor","colors","ItemSeparator","RepositoryList","repositories","setRepositories","fetchRepositories","fetch","res","json","console","log","repoNodes","respositories","edges","map","e","node"],"mappings":";;;;;AACA,OAAOA,cAAP;AACA,OAAOC,KAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,MAAM,EAAEP,KAAK,CAACQ,OAAN,CAAcF,SADZ;AAEVG,IAAAA,eAAe,EAAET,KAAK,CAACU,MAAN,CAAaJ;AAFpB;AADqB,CAAlB,CAAf;;AAOA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,KAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACG;AAApB,IAAN;AAAA,CAAtB;;AAEA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAE5B,kBAAwCV,QAAQ,EAAhD;AAAA;AAAA,MAAOW,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACPC,KAAK,CAAC,0CAAD,CADE;;AAAA;AACnBC,YAAAA,GADmB;AAAA;AAAA,6CAENA,GAAG,CAACC,IAAJ,EAFM;;AAAA;AAEnBA,YAAAA,IAFmB;AAGzBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,YAAAA,eAAe,CAACI,IAAD,CAAf;;AAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAOAjB,EAAAA,SAAS,CAAC,YAAM;AACfc,IAAAA,iBAAiB;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAMM,SAAS,GAAGC,aAAa,GAC5BA,aAAa,CAACC,KAAd,CAAoBC,GAApB,CAAwB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAN;AAAA,GAAzB,CAD4B,GAE5B,EAFH;AAIA,SACC,KAAC,QAAD;AACC,IAAA,IAAI,EAAEL,SADP;AAEC,IAAA,UAAU,EAAEtB,cAFb;AAGC,IAAA,sBAAsB,EAAEY;AAHzB,IADD;AAOA,CA1BD;;AA4BA,eAAeC,cAAf","sourcesContent":["import { FlatList, View, StyleSheet } from 'react-native'\nimport RepositoryItem from './RepositoryItem'\nimport theme from '../theme'\nimport { useEffect, useState } from 'react'\n\nconst styles = StyleSheet.create({\n\tseparator: {\n\t\theight: theme.spacing.separator,\n\t\tbackgroundColor: theme.colors.separator \n\t}\n})\n\nconst ItemSeparator = () => <View style={styles.separator}/>\n\nconst RepositoryList = () => {\n\n\tconst [repositories, setRepositories] = useState();\n\n\tconst fetchRepositories = async () => {\n\t\tconst res = await fetch('http://10.84.1.128:5000/api/repositories')\n\t\tconst json = await res.json()\n\t\tconsole.log(json)\n\t\tsetRepositories(json)\n\t}\n\n\tuseEffect(() => {\n\t\tfetchRepositories();\n\t}, [])\n\n\tconst repoNodes = respositories\n\t\t? respositories.edges.map(e => e.node)\n\t\t: [];\n\n\treturn (\n\t\t<FlatList\n\t\t\tdata={repoNodes}\n\t\t\trenderItem={RepositoryItem}\n\t\t\tItemSeparatorComponent={ItemSeparator}\n\t\t/>\n\t)\n}\n\nexport default RepositoryList"]},"metadata":{},"sourceType":"module"}