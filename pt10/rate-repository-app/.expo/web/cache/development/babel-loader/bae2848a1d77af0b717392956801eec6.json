{"ast":null,"code":"import * as yup from 'yup';\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik } from 'formik';\nimport FormikTextInput from \"../FormikTextInput\";\nimport ThemedText from \"../ThemedText\";\nimport theme from \"../../theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar style = StyleSheet.create({\n  button: {\n    backgroundColor: theme.colors.primary,\n    marginTop: 10,\n    borderRadius: 3,\n    padding: 5\n  },\n  buttonText: {\n    alignSelf: 'center',\n    color: 'white'\n  },\n  form: {\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: 'black',\n    padding: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    width: 300\n  }\n});\nvar initialValues = {\n  username: '',\n  password: '',\n  passwordConfirmation: ''\n};\nvar validationSchema = yup.object().shape({\n  username: yup.string().min(4, 'Must be at least 4 characters').max(12, 'Must be 12 characters or less').required('Username is required'),\n  password: yup.string().min(6, 'Must be at least 6 characters').max(12, 'Must be 12 characters or less').required('Password is required'),\n  passwordConfirmation: yup.oneOf([yup.ref('password'), null], 'Passwords do not match').required('Password confirmation is required')\n});\n\nvar SignUpForm = function SignUpForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return _jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema,\n    children: function children(_ref2) {\n      var handleSubmit = _ref2.handleSubmit;\n      return _jsxs(View, {\n        style: style.form,\n        children: [_jsx(FormikTextInput, {\n          name: \"username\",\n          placeholder: \"username\"\n        }), _jsx(FormikTextInput, {\n          name: \"password\",\n          placeholder: \"password\"\n        }), _jsx(FormikTextInput, {\n          name: \"passwordConfirmation\",\n          placeholder: \"passwordConfirmation\"\n        }), _jsx(Pressable, {\n          testID: \"submitButton\",\n          onPress: handleSubmit,\n          style: style.button,\n          children: _jsx(ThemedText, {\n            style: style.buttonText,\n            children: \"Sign In\"\n          })\n        })]\n      });\n    }\n  });\n};\n\nexport default SignUpForm;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/SignUp/SignUpForm.jsx"],"names":["yup","Formik","FormikTextInput","ThemedText","theme","style","StyleSheet","create","button","backgroundColor","colors","primary","marginTop","borderRadius","padding","buttonText","alignSelf","color","form","borderWidth","borderStyle","borderColor","display","flexDirection","width","initialValues","username","password","passwordConfirmation","validationSchema","object","shape","string","min","max","required","oneOf","ref","SignUpForm","onSubmit","handleSubmit"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;;;;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;;;AAEA,IAAMC,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACPC,IAAAA,eAAe,EAAEL,KAAK,CAACM,MAAN,CAAaC,OADvB;AAEPC,IAAAA,SAAS,EAAE,EAFJ;AAGPC,IAAAA,YAAY,EAAE,CAHP;AAIPC,IAAAA,OAAO,EAAE;AAJF,GADuB;AAO/BC,EAAAA,UAAU,EAAE;AACXC,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAPmB;AAW/BC,EAAAA,IAAI,EAAC;AACJC,IAAAA,WAAW,EAAE,CADT;AAEJC,IAAAA,WAAW,EAAE,OAFT;AAGJC,IAAAA,WAAW,EAAE,OAHT;AAIJP,IAAAA,OAAO,EAAE,EAJL;AAKJQ,IAAAA,OAAO,EAAE,MALL;AAMJC,IAAAA,aAAa,EAAE,QANX;AAOJC,IAAAA,KAAK,EAAE;AAPH;AAX0B,CAAlB,CAAd;AAsBA,IAAMC,aAAa,GAAG;AACrBC,EAAAA,QAAQ,EAAE,EADW;AAErBC,EAAAA,QAAQ,EAAE,EAFW;AAGrBC,EAAAA,oBAAoB,EAAE;AAHD,CAAtB;AAMA,IAAMC,gBAAgB,GAAG7B,GAAG,CAAC8B,MAAJ,GAAaC,KAAb,CAAmB;AAC3CL,EAAAA,QAAQ,EAAE1B,GAAG,CACXgC,MADQ,GAERC,GAFQ,CAEJ,CAFI,EAED,+BAFC,EAGRC,GAHQ,CAGJ,EAHI,EAGA,+BAHA,EAIRC,QAJQ,CAIC,sBAJD,CADiC;AAM3CR,EAAAA,QAAQ,EAAE3B,GAAG,CACXgC,MADQ,GAERC,GAFQ,CAEJ,CAFI,EAED,+BAFC,EAGRC,GAHQ,CAGJ,EAHI,EAGA,+BAHA,EAIRC,QAJQ,CAIC,sBAJD,CANiC;AAW3CP,EAAAA,oBAAoB,EAAE5B,GAAG,CACvBoC,KADoB,CACd,CAACpC,GAAG,CAACqC,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADc,EACe,wBADf,EAEpBF,QAFoB,CAEX,mCAFW;AAXqB,CAAnB,CAAzB;;AAgBA,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAClB,KAAC,MAAD;AACC,IAAA,aAAa,EAAEd,aADhB;AAEC,IAAA,QAAQ,EAAEc,QAFX;AAGC,IAAA,gBAAgB,EAAEV,gBAHnB;AAAA,cAKE;AAAA,UAAGW,YAAH,SAAGA,YAAH;AAAA,aACA,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEnC,KAAK,CAACa,IAAnB;AAAA,mBACC,KAAC,eAAD;AAAiB,UAAA,IAAI,EAAC,UAAtB;AAAiC,UAAA,WAAW,EAAC;AAA7C,UADD,EAEC,KAAC,eAAD;AAAiB,UAAA,IAAI,EAAC,UAAtB;AAAiC,UAAA,WAAW,EAAC;AAA7C,UAFD,EAGC,KAAC,eAAD;AAAiB,UAAA,IAAI,EAAC,sBAAtB;AAA6C,UAAA,WAAW,EAAC;AAAzD,UAHD,EAIC,KAAC,SAAD;AAAW,UAAA,MAAM,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAEsB,YAA1C;AAAwD,UAAA,KAAK,EAAEnC,KAAK,CAACG,MAArE;AAAA,oBACC,KAAC,UAAD;AAAY,YAAA,KAAK,EAAEH,KAAK,CAACU,UAAzB;AAAA;AAAA;AADD,UAJD;AAAA,QADA;AAAA;AALF,IADkB;AAAA,CAAnB;;AAmBA,eAAeuB,UAAf","sourcesContent":["import * as yup from 'yup'\nimport { View, Pressable, StyleSheet } from 'react-native'\nimport { Formik } from 'formik'\nimport FormikTextInput from '../FormikTextInput'\nimport ThemedText from '../ThemedText'\nimport theme from '../../theme'\n\nconst style = StyleSheet.create({\n\tbutton: {\n\t\tbackgroundColor: theme.colors.primary,\n\t\tmarginTop: 10,\n\t\tborderRadius: 3,\n\t\tpadding: 5\n\t},\n\tbuttonText: {\n\t\talignSelf: 'center',\n\t\tcolor: 'white'\n\t},\n\tform:{\n\t\tborderWidth: 1,\n\t\tborderStyle: 'solid',\n\t\tborderColor: 'black',\n\t\tpadding: 10,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\twidth: 300\n\t}\n})\n\nconst initialValues = {\n\tusername: '',\n\tpassword: '',\n\tpasswordConfirmation: ''\n}\n\nconst validationSchema = yup.object().shape({\n\tusername: yup\n\t\t.string()\n\t\t.min(4, 'Must be at least 4 characters')\n\t\t.max(12, 'Must be 12 characters or less')\n\t\t.required('Username is required'),\n\tpassword: yup\n\t\t.string()\n\t\t.min(6, 'Must be at least 6 characters')\n\t\t.max(12, 'Must be 12 characters or less')\n\t\t.required('Password is required'),\n\tpasswordConfirmation: yup\n\t\t.oneOf([yup.ref('password'), null], 'Passwords do not match')\n\t\t.required('Password confirmation is required')\n})\n\nconst SignUpForm = ({ onSubmit }) => (\n\t<Formik\n\t\tinitialValues={initialValues}\n\t\tonSubmit={onSubmit}\n\t\tvalidationSchema={validationSchema}\n\t>\n\t\t{({ handleSubmit }) => (\n\t\t\t<View style={style.form}>\n\t\t\t\t<FormikTextInput name='username' placeholder='username' />\n\t\t\t\t<FormikTextInput name='password' placeholder='password' />\n\t\t\t\t<FormikTextInput name='passwordConfirmation' placeholder='passwordConfirmation' />\n\t\t\t\t<Pressable testID='submitButton' onPress={handleSubmit} style={style.button}>\n\t\t\t\t\t<ThemedText style={style.buttonText}>Sign In</ThemedText>\n\t\t\t\t</Pressable>\n\t\t\t</View>\n\t\t)}\n\t</Formik>\n)\n\nexport default SignUpForm"]},"metadata":{},"sourceType":"module"}