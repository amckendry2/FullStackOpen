{"ast":null,"code":"import * as yup from 'yup';\nimport { Formik } from 'formik';\nimport FormikTextInput from \"../FormikTextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ThemedText from \"../ThemedText\";\nimport theme from \"../../theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar style = StyleSheet.create({\n  button: {\n    backgroundColor: theme.colors.primary,\n    marginTop: 10,\n    borderRadius: 3,\n    padding: 5\n  },\n  buttonText: {\n    alignSelf: 'center',\n    color: 'white'\n  },\n  form: {\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: 'black',\n    padding: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    width: 300\n  }\n});\nvar initialValues = {\n  repositoryOwner: '',\n  repositoryName: '',\n  rating: '',\n  review: ''\n};\nvar validationSchema = yup.object().shape({\n  repositoryOwner: yup.string().required('Username is required'),\n  repositoryName: yup.string().required('Password is required'),\n  rating: yup.number().min(0).max(100).required(),\n  review: yup.string\n});\n\nvar CreateReviewForm = function CreateReviewForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return _jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    children: function children(_ref2) {\n      var handleSubmit = _ref2.handleSubmit;\n      return _jsxs(View, {\n        style: style.form,\n        children: [_jsx(FormikTextInput, {\n          name: \"repositoryOwner\",\n          placeholder: \"Repository owner name\"\n        }), _jsx(FormikTextInput, {\n          name: \"repositoryName\",\n          placeholder: \"Repository name\"\n        }), _jsx(FormikTextInput, {\n          name: \"rating\",\n          placeholder: \"Rating between 0 and 100\"\n        }), _jsx(FormikTextInput, {\n          name: \"review\",\n          placeholder: \"Review\"\n        }), _jsx(Pressable, {\n          testID: \"submitButton\",\n          onPress: handleSubmit,\n          style: style.button,\n          children: _jsx(ThemedText, {\n            style: style.buttonText,\n            children: \"Sign In\"\n          })\n        })]\n      });\n    }\n  });\n};\n\nexport default CreateReviewForm;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/CreateReview/CreateReviewForm.jsx"],"names":["yup","Formik","FormikTextInput","ThemedText","theme","style","StyleSheet","create","button","backgroundColor","colors","primary","marginTop","borderRadius","padding","buttonText","alignSelf","color","form","borderWidth","borderStyle","borderColor","display","flexDirection","width","initialValues","repositoryOwner","repositoryName","rating","review","validationSchema","object","shape","string","required","number","min","max","CreateReviewForm","onSubmit","handleSubmit"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,eAAP;;;;AAEA,OAAOC,UAAP;AACA,OAAOC,KAAP;;;AAEA,IAAMC,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACPC,IAAAA,eAAe,EAAEL,KAAK,CAACM,MAAN,CAAaC,OADvB;AAEPC,IAAAA,SAAS,EAAE,EAFJ;AAGPC,IAAAA,YAAY,EAAE,CAHP;AAIPC,IAAAA,OAAO,EAAE;AAJF,GADuB;AAO/BC,EAAAA,UAAU,EAAE;AACXC,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAPmB;AAW/BC,EAAAA,IAAI,EAAC;AACJC,IAAAA,WAAW,EAAE,CADT;AAEJC,IAAAA,WAAW,EAAE,OAFT;AAGJC,IAAAA,WAAW,EAAE,OAHT;AAIJP,IAAAA,OAAO,EAAE,EAJL;AAKJQ,IAAAA,OAAO,EAAE,MALL;AAMJC,IAAAA,aAAa,EAAE,QANX;AAOJC,IAAAA,KAAK,EAAE;AAPH;AAX0B,CAAlB,CAAd;AAqBA,IAAMC,aAAa,GAAG;AACrBC,EAAAA,eAAe,EAAE,EADI;AAErBC,EAAAA,cAAc,EAAE,EAFK;AAGrBC,EAAAA,MAAM,EAAE,EAHa;AAIrBC,EAAAA,MAAM,EAAE;AAJa,CAAtB;AAOA,IAAMC,gBAAgB,GAAG9B,GAAG,CAAC+B,MAAJ,GAAaC,KAAb,CAAmB;AAC3CN,EAAAA,eAAe,EAAE1B,GAAG,CAClBiC,MADe,GAEfC,QAFe,CAEN,sBAFM,CAD0B;AAI3CP,EAAAA,cAAc,EAAE3B,GAAG,CACjBiC,MADc,GAEdC,QAFc,CAEL,sBAFK,CAJ2B;AAO3CN,EAAAA,MAAM,EAAE5B,GAAG,CACTmC,MADM,GAENC,GAFM,CAEF,CAFE,EAGNC,GAHM,CAGF,GAHE,EAINH,QAJM,EAPmC;AAY3CL,EAAAA,MAAM,EAAE7B,GAAG,CACTiC;AAbyC,CAAnB,CAAzB;;AAgBA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC1C,SACC,KAAC,MAAD;AACC,IAAA,aAAa,EAAEd,aADhB;AAEC,IAAA,QAAQ,EAAEc,QAFX;AAAA,cAKE;AAAA,UAAGC,YAAH,SAAGA,YAAH;AAAA,aACA,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEnC,KAAK,CAACa,IAAnB;AAAA,mBACC,KAAC,eAAD;AAAiB,UAAA,IAAI,EAAC,iBAAtB;AAAwC,UAAA,WAAW,EAAC;AAApD,UADD,EAEC,KAAC,eAAD;AAAiB,UAAA,IAAI,EAAC,gBAAtB;AAAuC,UAAA,WAAW,EAAC;AAAnD,UAFD,EAGC,KAAC,eAAD;AAAiB,UAAA,IAAI,EAAC,QAAtB;AAA+B,UAAA,WAAW,EAAC;AAA3C,UAHD,EAIC,KAAC,eAAD;AAAiB,UAAA,IAAI,EAAC,QAAtB;AAA+B,UAAA,WAAW,EAAC;AAA3C,UAJD,EAKC,KAAC,SAAD;AAAW,UAAA,MAAM,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAEsB,YAA1C;AAAwD,UAAA,KAAK,EAAEnC,KAAK,CAACG,MAArE;AAAA,oBACC,KAAC,UAAD;AAAY,YAAA,KAAK,EAAEH,KAAK,CAACU,UAAzB;AAAA;AAAA;AADD,UALD;AAAA,QADA;AAAA;AALF,IADD;AAoBA,CArBD;;AAuBA,eAAeuB,gBAAf","sourcesContent":["import * as yup from 'yup'\nimport { Formik } from 'formik'\nimport FormikTextInput from '../FormikTextInput'\nimport { View, Pressable, StyleSheet } from 'react-native'\nimport ThemedText from '../ThemedText'\nimport theme from '../../theme'\n\nconst style = StyleSheet.create({\n\tbutton: {\n\t\tbackgroundColor: theme.colors.primary,\n\t\tmarginTop: 10,\n\t\tborderRadius: 3,\n\t\tpadding: 5\n\t},\n\tbuttonText: {\n\t\talignSelf: 'center',\n\t\tcolor: 'white'\n\t},\n\tform:{\n\t\tborderWidth: 1,\n\t\tborderStyle: 'solid',\n\t\tborderColor: 'black',\n\t\tpadding: 10,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\twidth: 300\n\t}\n})\nconst initialValues = {\n\trepositoryOwner: '',\n\trepositoryName: '',\n\trating: '',\n\treview: ''\n}\n\nconst validationSchema = yup.object().shape({\n\trepositoryOwner: yup\n\t\t.string()\n\t\t.required('Username is required'),\n\trepositoryName: yup\n\t\t.string()\n\t\t.required('Password is required'),\n\trating: yup\n\t\t.number()\n\t\t.min(0)\n\t\t.max(100)\n\t\t.required(),\n\treview: yup\n\t\t.string\n})\n\nconst CreateReviewForm = ({ onSubmit }) => {\n\treturn(\n\t\t<Formik\n\t\t\tinitialValues={initialValues}\n\t\t\tonSubmit={onSubmit}\n\n\t\t>\n\t\t\t{({ handleSubmit }) => (\n\t\t\t\t<View style={style.form}>\n\t\t\t\t\t<FormikTextInput name='repositoryOwner' placeholder='Repository owner name' />\n\t\t\t\t\t<FormikTextInput name='repositoryName' placeholder='Repository name' />\n\t\t\t\t\t<FormikTextInput name='rating' placeholder='Rating between 0 and 100'/>\n\t\t\t\t\t<FormikTextInput name='review' placeholder='Review'/>\n\t\t\t\t\t<Pressable testID='submitButton' onPress={handleSubmit} style={style.button}>\n\t\t\t\t\t\t<ThemedText style={style.buttonText}>Sign In</ThemedText>\n\t\t\t\t\t</Pressable>\n\t\t\t\t</View>\n\t\t\t)}\n\n\t\t</Formik>\n\t)\n}\n\nexport default CreateReviewForm"]},"metadata":{},"sourceType":"module"}