{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ThemedText from \"./ThemedText\";\nimport theme from \"../theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar style = StyleSheet.create({\n  avatarImage: {\n    height: theme.spacing.imageHeight,\n    width: theme.spacing.imageWidth,\n    borderRadius: 10\n  },\n  panel: {\n    padding: 10\n  },\n  panelTop: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  nub: {\n    backgroundColor: theme.colors.primary,\n    flexGrow: 0,\n    borderRadius: 5,\n    color: 'white',\n    padding: 5,\n    overflow: 'hidden',\n    alignSelf: 'flex-start',\n    paddingTop: 10\n  }\n});\n\nvar RepositoryItem = function RepositoryItem(_ref) {\n  var item = _ref.item;\n  return _jsxs(View, {\n    style: style.panel,\n    children: [_jsxs(View, {\n      style: style.panelTop,\n      children: [_jsx(Image, {\n        style: style.avatarImage,\n        source: {\n          uri: item.ownerAvatarUrl\n        }\n      }), _jsxs(View, {\n        style: style.header,\n        children: [_jsx(ThemedText, {\n          fontWeight: \"bold\",\n          fontSize: 'subheading',\n          withPadding: true,\n          children: item.fullName\n        }), _jsx(ThemedText, {\n          color: \"textSecondary\",\n          children: item.description\n        }), _jsx(View, {\n          style: style.nub,\n          children: item.language\n        })]\n      })]\n    }), _jsxs(Text, {\n      children: [\"Stars: \", item.stargazersCount]\n    }), _jsxs(Text, {\n      children: [\"Forks: \", item.forksCount]\n    }), _jsxs(Text, {\n      children: [\"Reviews: \", item.reviewCount]\n    }), _jsxs(Text, {\n      children: [\"Rating: \", item.ratingAverage]\n    })]\n  });\n};\n\nexport default RepositoryItem;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/components/RepositoryItem.jsx"],"names":["ThemedText","theme","style","StyleSheet","create","avatarImage","height","spacing","imageHeight","width","imageWidth","borderRadius","panel","padding","panelTop","display","flexDirection","nub","backgroundColor","colors","primary","flexGrow","color","overflow","alignSelf","paddingTop","RepositoryItem","item","uri","ownerAvatarUrl","header","fullName","description","language","stargazersCount","forksCount","reviewCount","ratingAverage"],"mappings":";;;;AACA,OAAOA,UAAP;AACA,OAAOC,KAAP;;;AAEA,IAAMC,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,WAAW,EAAC;AACXC,IAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAcC,WADX;AAEXC,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcG,UAFV;AAGXC,IAAAA,YAAY,EAAE;AAHH,GADmB;AAM/BC,EAAAA,KAAK,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GANwB;AAS/BC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE;AAFN,GATqB;AAa/BC,EAAAA,GAAG,EAAE;AACJC,IAAAA,eAAe,EAAEjB,KAAK,CAACkB,MAAN,CAAaC,OAD1B;AAEJC,IAAAA,QAAQ,EAAE,CAFN;AAGJV,IAAAA,YAAY,EAAE,CAHV;AAIJW,IAAAA,KAAK,EAAE,OAJH;AAKJT,IAAAA,OAAO,EAAE,CALL;AAMJU,IAAAA,QAAQ,EAAE,QANN;AAOJC,IAAAA,SAAS,EAAE,YAPP;AAQJC,IAAAA,UAAU,EAAE;AARR;AAb0B,CAAlB,CAAd;;AAyBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SACtB,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,KAAK,CAACU,KAAnB;AAAA,eACC,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,KAAK,CAACY,QAAnB;AAAA,iBACC,KAAC,KAAD;AACC,QAAA,KAAK,EAAEZ,KAAK,CAACG,WADd;AAEC,QAAA,MAAM,EAAE;AAAEuB,UAAAA,GAAG,EAAED,IAAI,CAACE;AAAZ;AAFT,QADD,EAKC,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE3B,KAAK,CAAC4B,MAAnB;AAAA,mBACC,KAAC,UAAD;AACC,UAAA,UAAU,EAAC,MADZ;AAEC,UAAA,QAAQ,EAAE,YAFX;AAGC,UAAA,WAAW,MAHZ;AAAA,oBAKEH,IAAI,CAACI;AALP,UADD,EAQC,KAAC,UAAD;AACC,UAAA,KAAK,EAAC,eADP;AAAA,oBAGEJ,IAAI,CAACK;AAHP,UARD,EAaC,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE9B,KAAK,CAACe,GAAnB;AAAA,oBAAyBU,IAAI,CAACM;AAA9B,UAbD;AAAA,QALD;AAAA,MADD,EAsBC,MAAC,IAAD;AAAA,4BAAcN,IAAI,CAACO,eAAnB;AAAA,MAtBD,EAuBC,MAAC,IAAD;AAAA,4BAAcP,IAAI,CAACQ,UAAnB;AAAA,MAvBD,EAwBC,MAAC,IAAD;AAAA,8BAAgBR,IAAI,CAACS,WAArB;AAAA,MAxBD,EAyBC,MAAC,IAAD;AAAA,6BAAeT,IAAI,CAACU,aAApB;AAAA,MAzBD;AAAA,IADsB;AAAA,CAAvB;;AA8BA,eAAeX,cAAf","sourcesContent":["import { View, Text, Image, StyleSheet } from 'react-native'\nimport ThemedText from './ThemedText'\nimport theme from '../theme'\n\nconst style = StyleSheet.create({\n\tavatarImage:{\n\t\theight: theme.spacing.imageHeight,\n\t\twidth: theme.spacing.imageWidth,\n\t\tborderRadius: 10\n\t},\n\tpanel: {\n\t\tpadding: 10\n\t},\n\tpanelTop: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row'\n\t},\n\tnub: {\n\t\tbackgroundColor: theme.colors.primary,\n\t\tflexGrow: 0,\n\t\tborderRadius: 5,\n\t\tcolor: 'white',\n\t\tpadding: 5,\n\t\toverflow: 'hidden',\n\t\talignSelf: 'flex-start',\n\t\tpaddingTop: 10\n\t}\n})\n\nconst RepositoryItem = ({ item }) => (\n\t<View style={style.panel}>\n\t\t<View style={style.panelTop}>\n\t\t\t<Image \n\t\t\t\tstyle={style.avatarImage} \n\t\t\t\tsource={{ uri: item.ownerAvatarUrl }} \n\t\t\t/>\n\t\t\t<View style={style.header}>\n\t\t\t\t<ThemedText \n\t\t\t\t\tfontWeight='bold' \n\t\t\t\t\tfontSize={'subheading'}\n\t\t\t\t\twithPadding\n\t\t\t\t>\n\t\t\t\t\t{item.fullName}\n\t\t\t\t</ThemedText>\t\n\t\t\t\t<ThemedText \n\t\t\t\t\tcolor='textSecondary'\n\t\t\t\t>\n\t\t\t\t\t{item.description}\n\t\t\t\t</ThemedText>\n\t\t\t\t<View style={style.nub}>{item.language}</View>\n\t\t\t</View>\n\t\t</View>\n\t\t<Text>Stars: {item.stargazersCount}</Text>\n\t\t<Text>Forks: {item.forksCount}</Text>\n\t\t<Text>Reviews: {item.reviewCount}</Text>\n\t\t<Text>Rating: {item.ratingAverage}</Text>\n\t</View>\n)\n\nexport default RepositoryItem"]},"metadata":{},"sourceType":"module"}