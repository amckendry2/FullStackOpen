{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\n\nvar useRepositories = function useRepositories() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      repositories = _useState4[0],\n      setRepositories = _useState4[1];\n\n  var fetchRepositories = function fetchRepositories() {\n    var repos, json;\n    return _regeneratorRuntime.async(function fetchRepositories$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://10.84.1.128:5000/api/repositories'));\n\n          case 3:\n            repos = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(repos.json());\n\n          case 6:\n            json = _context.sent;\n            console.log(json);\n            setRepositories(json);\n            setLoading(false);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchRepositories();\n  }, []);\n  return {\n    repositories: repositories,\n    loading: loading,\n    refetch: fetchRepositories\n  };\n};\n\nexport default useRepositories;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/hooks/useRepositories.js"],"names":["useState","useEffect","useRepositories","loading","setLoading","repositories","setRepositories","fetchRepositories","fetch","repos","json","console","log","refetch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC7B,kBAA8BF,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAwCJ,QAAQ,EAAhD;AAAA;AAAA,MAAOK,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBH,YAAAA,UAAU,CAAC,IAAD,CAAV;AADyB;AAAA,6CAELI,KAAK,CAAC,0CAAD,CAFA;;AAAA;AAEnBC,YAAAA,KAFmB;AAAA;AAAA,6CAGNA,KAAK,CAACC,IAAN,EAHM;;AAAA;AAGnBA,YAAAA,IAHmB;AAIzBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,YAAAA,eAAe,CAACI,IAAD,CAAf;AACAN,YAAAA,UAAU,CAAC,KAAD,CAAV;;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AASAH,EAAAA,SAAS,CAAC,YAAM;AACfM,IAAAA,iBAAiB;AACjB,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAO;AAAEF,IAAAA,YAAY,EAAZA,YAAF;AAAgBF,IAAAA,OAAO,EAAPA,OAAhB;AAAyBU,IAAAA,OAAO,EAAEN;AAAlC,GAAP;AACA,CAlBD;;AAoBA,eAAeL,eAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst useRepositories = () => {\n\tconst [loading, setLoading] = useState(false)\n\tconst [repositories, setRepositories] = useState()\n\n\tconst fetchRepositories = async () => {\n\t\tsetLoading(true)\n\t\tconst repos = await fetch('http://10.84.1.128:5000/api/repositories')\n\t\tconst json = await repos.json()\n\t\tconsole.log(json)\n\t\tsetRepositories(json)\n\t\tsetLoading(false)\n\t}\n\n\tuseEffect(() => {\n\t\tfetchRepositories()\n\t},[])\n\n\treturn { repositories, loading, refetch: fetchRepositories }\n}\n\nexport default useRepositories"]},"metadata":{},"sourceType":"module"}