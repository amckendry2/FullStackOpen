{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useApolloClient, useMutation } from '@apollo/client';\nimport { AUTHENTICATE } from \"../graphql/mutations\";\nimport useAuthStorage from \"./useAuthStorage\";\n\nvar useSignIn = function useSignIn() {\n  var authStorage = useAuthStorage();\n\n  var _useMutation = useMutation(AUTHENTICATE),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      mutate = _useMutation2[0];\n\n  var apolloClient = useApolloClient();\n\n  var signIn = function signIn(params) {\n    var _await$mutate, retData;\n\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(mutate({\n              variables: {\n                credentials: params\n              }\n            }));\n\n          case 3:\n            _await$mutate = _context.sent;\n            retData = _await$mutate.data;\n            console.log(retData.authenticate.accessToken);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(authStorage.setAccessToken(retData.authenticate.accessToken));\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(apolloClient.resetStore());\n\n          case 10:\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var signOut = function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(authStorage.removeAccessToken());\n\n          case 3:\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(apolloClient.resetStore());\n\n          case 5:\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return [signIn, signOut];\n};\n\nexport default useSignIn;","map":{"version":3,"sources":["/home/fuzzy-dunlop/Desktop/react-projects/rate-repository-app/src/hooks/useSignIn.js"],"names":["useApolloClient","useMutation","AUTHENTICATE","useAuthStorage","useSignIn","authStorage","mutate","apolloClient","signIn","params","variables","credentials","retData","data","console","log","authenticate","accessToken","setAccessToken","resetStore","signOut","removeAccessToken"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,gBAA7C;AACA,SAASC,YAAT;AACA,OAAOC,cAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAEvB,MAAMC,WAAW,GAAGF,cAAc,EAAlC;;AACA,qBAAiBF,WAAW,CAACC,YAAD,CAA5B;AAAA;AAAA,MAAOI,MAAP;;AACA,MAAMC,YAAY,GAAGP,eAAe,EAApC;;AAEA,MAAMQ,MAAM,GAAG,SAATA,MAAS,CAAMC,MAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEmBH,MAAM,CAAC;AACtCI,cAAAA,SAAS,EAAE;AACVC,gBAAAA,WAAW,EAAEF;AADH;AAD2B,aAAD,CAFzB;;AAAA;AAAA;AAECG,YAAAA,OAFD,iBAELC,IAFK;AAObC,YAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,YAAR,CAAqBC,WAAjC;AAPa;AAAA,6CAQPZ,WAAW,CAACa,cAAZ,CAA2BN,OAAO,CAACI,YAAR,CAAqBC,WAAhD,CARO;;AAAA;AAAA;AAAA,6CASPV,YAAY,CAACY,UAAb,EATO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWbL,YAAAA,OAAO,CAACC,GAAR;;AAXa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAeA,MAAMK,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAERf,WAAW,CAACgB,iBAAZ,EAFQ;;AAAA;AAAA;AAAA,6CAGRd,YAAY,CAACY,UAAb,EAHQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKdL,YAAAA,OAAO,CAACC,GAAR;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AASA,SAAO,CAACP,MAAD,EAASY,OAAT,CAAP;AACA,CA/BD;;AAiCA,eAAehB,SAAf","sourcesContent":["import { useApolloClient, useMutation } from '@apollo/client'\nimport { AUTHENTICATE } from '../graphql/mutations'\nimport useAuthStorage from './useAuthStorage'\n\nconst useSignIn = () => {\n\n\tconst authStorage = useAuthStorage()\n\tconst [mutate] = useMutation(AUTHENTICATE)\n\tconst apolloClient = useApolloClient()\n\n\tconst signIn = async params => {\n\t\ttry {\n\t\t\tconst { data: retData } = await mutate({\n\t\t\t\tvariables: {\n\t\t\t\t\tcredentials: params\n\t\t\t\t}\n\t\t\t})\n\t\t\tconsole.log(retData.authenticate.accessToken)\n\t\t\tawait authStorage.setAccessToken(retData.authenticate.accessToken)\n\t\t\tawait apolloClient.resetStore()\t\n\t\t} catch(err) {\n\t\t\tconsole.log(err)\n\t\t}\n\t}\n\n\tconst signOut = async () => {\n\t\ttry {\n\t\t\tawait authStorage.removeAccessToken()\n\t\t\tawait apolloClient.resetStore()\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t}\n\t}\n\n\treturn [signIn, signOut];\n}\n\nexport default useSignIn"]},"metadata":{},"sourceType":"module"}